path_name=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)
utils="$path_name/utils"
source $utils

generate_compile_command()
{
    local CMD="$@"
    local DIR=$(pwd)
    local dir_key='"directory"'
    local cmd_key='"command"'
    local args_key='"arguments"'
    local file_key='"file"'

    if [[ $CMD =~ ^([^[:blank:]]+)[[:blank:]]+(.*)[[:blank:]]+([^[:blank:]]+\.(c|cc|cpp|cxx|h|hxx))([[:blank:]].*)?$ ]]
    then
        COMPILER="${BASH_REMATCH[1]}"
        ARGUMENTS="${BASH_REMATCH[2]}"
        FILE_NAME="${BASH_REMATCH[3]}"
        if [[ ${#BASH_REMATCH[@]} == 4 ]]
        then
            ARGUMENTS=$ARGUMENTS" ${BASH_REMATCH[4]}"
        fi

        # Deal with whitespace between option and argument
        for w in $COMPILER $ARGUMENTS
        do
            if [[ $w =~ ^-.* ]]
            then
                ARGS="$ARGS\",\n   \"$(escape $w)"
            else
                ARGS="$ARGS $(escape $w)"
            fi
        done

        ARGS=\"${ARGS## }\"

        item=" {\n"
        item=$item"  $dir_key: $(quote $DIR),\n"
        item=$item"  $cmd_key: $(quote $CMD),\n"
        item=$item"  $args_key: [\n   $ARGS,\n   $(quote $FILE_NAME),\n  ],\n"
        item=$item"  $file_key: $(quote $FILE_NAME),\n },\n"
    fi
}
